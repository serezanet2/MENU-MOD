local player = game:GetService("Players").LocalPlayer
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

-- Конфигурация (обновите URL при необходимости)
local API_URL = "https://serezanet2.github.io/GitUnlock/Gitmoder/?check="
local MAIN_SCRIPT_URL = "https://raw.githubusercontent.com/serezanet2/serezanet2-GIT-SALLI/main/script.lua"
local PROFILE_LINK = "https://serezanet2.github.io/GitUnlock/"

-- Создаем интерфейс
local gui = Instance.new("ScreenGui")
gui.Name = "AuthGUI_"..tostring(math.random(1, 9999))
gui.Parent = game:GetService("CoreGui")
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 300)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = gui

-- Остальные элементы интерфейса (как в оригинале) ...

-- Функция для отладки в F9
local function debugLog(message)
    print("[Gitmoder Debug]: "..tostring(message))
end

-- Улучшенная проверка ключа
local function validateKey(key)
    -- Очистка ключа от пробелов
    key = string.gsub(tostring(key), "%s+", "")
    if #key < 5 then
        debugLog("Ключ слишком короткий")
        return false 
    end
    
    debugLog("Проверяем ключ: "..key)
    
    local success, result = pcall(function()
        if not HttpService:IsHttpGetEnabled() then
            error("HTTP запросы отключены")
        end
        
        debugLog("Отправляем запрос на: "..API_URL..key)
        local response = HttpService:GetAsync(API_URL..key, true)
        debugLog("Получен ответ: "..tostring(response))
        
        local data = HttpService:JSONDecode(response)
        debugLog("Данные проверки: "..tostring(data.valid))
        
        return data.valid == true
    end)
    
    if not success then
        debugLog("Ошибка проверки: "..tostring(result))
    end
    
    return success and result
end

-- Обработчик кнопки подтверждения
submitBtn.MouseButton1Click:Connect(function()
    debugLog("Нажата кнопка подтверждения")
    
    submitBtn.Text = "ПРОВЕРКА..."
    statusText.Text = ""
    textBox:ReleaseFocus()
    
    local key = textBox.Text
    debugLog("Введенный ключ: "..tostring(key))
    
    if validateKey(key) then
        debugLog("Ключ действителен")
        statusText.Text = "Успешная проверка!"
        statusText.TextColor3 = Color3.fromRGB(0, 255, 0)
        
        -- Загрузка основного скрипта
        local success, script = pcall(function()
            return HttpService:GetAsync(MAIN_SCRIPT_URL, true)
        end)
        
        if success then
            debugLog("Скрипт получен, загружаем...")
            local loadSuccess, err = pcall(loadstring, script)
            if loadSuccess then
                debugLog("Скрипт успешно загружен")
                gui:Destroy()
            else
                debugLog("Ошибка загрузки: "..tostring(err))
                statusText.Text = "Ошибка загрузки!"
                statusText.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
        else
            debugLog("Ошибка получения скрипта: "..tostring(script))
            statusText.Text = "Ошибка сети!"
            statusText.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
    else
        debugLog("Неверный ключ")
        statusText.Text = "НЕВЕРНЫЙ КЛЮЧ!"
        statusText.TextColor3 = Color3.fromRGB(255, 0, 0)
        task.wait(1.5)
        statusText.Text = ""
    end
    
    submitBtn.Text = "ПОДТВЕРДИТЬ"
end)

-- Остальные обработчики и анимации ...

-- Проверка HTTP доступа
if not HttpService:IsHttpGetEnabled() then
    debugLog("Внимание: HTTP запросы отключены!")
    statusText.Text = "Ошибка: HTTP отключены"
    statusText.TextColor3 = Color3.fromRGB(255, 0, 0)
end

debugLog("Интерфейс успешно создан")
